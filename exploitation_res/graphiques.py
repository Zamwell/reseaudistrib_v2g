# -*- coding: utf-8 -*-
"""
Created on Wed Sep 25 13:31:23 2019

@author: Utilisateur
"""

import os
import pandas as pd
from matplotlib import pyplot as plt
import numpy as np

def plot_graph(output_dir, table, variable, y_label = "", title="", drop = []):
    table_file = os.path.join(output_dir, table, variable)
    df = pd.read_csv(table_file, index_col=[0], sep = ";")
    drop_str = [str(nom) for nom in drop]
    dfi = df.drop(drop_str, axis = 1)
    dfi.plot(label = variable[:-4])
    plt.xlabel("time step")
    plt.ylabel(y_label)
    plt.title(title)
    plt.grid()
    plt.show()

def plot_pertes(output_dir):
    table_file = os.path.join(output_dir, "res_line", "pl_mw.csv")
    df = pd.read_csv(table_file, index_col = [0], sep = ";")
    df = df/4
    df_sum = pd.DataFrame()
    df_sum['Total'] = df.sum(axis=1)
    df_sum.plot()
    plt.xlabel("time step")
    plt.ylabel("Losses (MWh)")
    plt.title("Grid Losses")
    plt.grid()
    plt.show()
    return df_sum

def comp_pertes(df_base, df_ev):
    df_agg = pd.concat([df_base, df_ev], axis = 1)
    df_agg.plot()
    plt.xlabel("time step")
    plt.ylabel("Losses (MWh)")
    plt.title("Grid Losses")
    plt.grid()
    plt.show()
    (som_base, som_ev) = (df_base.sum().values[0], df_ev.sum().values[0])
    print("Pertes sans EV : " + str(np.round(som_base,3)) + "MWh")
    print("Pertes avec EV : " + str(np.round(som_ev,3)) + "MWh")
    print("Augmentation  : " + str(np.round((som_ev/som_base-1)*100,3)) + "%")
    